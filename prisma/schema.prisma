// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}



model User {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String    @unique
  email   String    @unique
  tasks   Task[]
  taskLogs TaskLog[]

  
}



model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  dueDate     DateTime?
  priority    Priority  @default(MEDIUM)
  status      Status    @default(PENDING)
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  taskLogs    TaskLog[]

  @@index([userId])
  @@index([status])
  @@index([priority])
}


model TaskLog {

  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  action    Action
  timestamp DateTime  @default(now())
  userId    String    @db.ObjectId
  taskId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  task      Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([taskId])
}



enum Priority {

  LOW
  MEDIUM
  HIGH
}


enum Status {

  PENDING
  IN_PROGRESS
  COMPLETED
}

enum Action {
  CREATED
  UPDATED
  DELETED
}

